name: Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    paths:
      - '.github/project.yml'

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  precheck:
    if: github.repository == 'halkyonio/java-kind-client' && startsWith(github.event.head_commit.message, 'Releasing version') != true
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          cache: maven

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT

  maven-release:
    needs: [ precheck ]
    name: Release java-kind-client
    if: ${{ github.event_name == 'workflow_dispatch' || endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT') }} # github.event.pull_request.merged == true}}
    runs-on: ubuntu-latest
    #outputs:
    #  already_released: ${{steps.released.outputs.already_released}}

    steps:
      - uses: actions/checkout@v4

      - uses: radcortez/project-metadata-action@main
        name: Retrieve project metadata
        id: metadata
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          metadata-file-path: '.github/project.yml'
          local-file: true

      #- name: Check if already released
      #  id: released
      #  run: |
      #    # TODO
      #    # if curl --output /dev/null --silent --head --fail "https://repo1.maven.org/maven2/net/laprun/sustainability/java-kind-client/${{steps.metadata.outputs.current-version}}"; then
      #    #  echo "already_released=true" >> $GITHUB_OUTPUT
      #    #fi
      #    echo "already_released=false" >> $GITHUB_OUTPUT

      #- name: Configure Git author
      #  if: steps.released.outputs.already_released != 'true'
      #  run: |
      #    git config --local user.email "action@github.com"
      #    git config --local user.name "GitHub Action"

      #- uses: actions/setup-java@v4
      #  if: steps.released.outputs.already_released != 'true'
      #  with:
      #    distribution: 'temurin'
      #    java-version: '21'
      #    cache: 'maven'
      #    server-id: central
      #    server-username: MAVEN_USERNAME
      #    server-password: MAVEN_PASSWORD
      #    gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
      #    gpg-passphrase: MAVEN_GPG_PASSPHRASE

      #- name: Maven release ${{steps.metadata.outputs.current-version}}
      #  if: steps.released.outputs.already_released != 'true'
      #  run: |
      #    mvn -B release:prepare -Prelease -Darguments="-DskipTests" -DreleaseVersion=${{steps.metadata.outputs.current-version}} -DdevelopmentVersion=${{steps.metadata.outputs.next-version}}
      #    mvn -B release:perform -Darguments="-DperformRelease -DskipTests" -DperformRelease -Prelease
      #  env:
      #    MAVEN_USERNAME: "${{ secrets.CENTRAL_USER }}"
      #    MAVEN_PASSWORD: "${{ secrets.CENTRAL_PASSWORD }}"
      #    MAVEN_GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      # TODO
      # - name: Push changes to ${{github.base_ref}} branch
      #  if: steps.released.outputs.already_released != 'true'
      #  run: |
      #    git push
      #    git push origin ${{steps.metadata.outputs.current-version}}

  # Build native executable per runner
  package:
    if: needs.maven-release.outputs.already_released != 'true'
    needs: [maven-release]
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, macos-13 ]
    uses: ./.github/workflows/native-build.yml
    with:
      platform: ${{ matrix.os }}

  # Collect all executables and release
  release:
    if: needs.maven-release.outputs.already_released != 'true'
    needs: [ maven-release, package ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # checkout will clobber downloaded artifacts
      # we have to download them again
      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: jkind-*
          merge-multiple: true

      - name: 'Set up Java'
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: 'Release with JReleaser'
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -ntp -B --file pom.xml -Prelease -DartifactsDir=artifacts jreleaser:full-release

      - name: 'JReleaser output'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-logs
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties
